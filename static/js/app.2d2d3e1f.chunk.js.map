{"version":3,"sources":["web-build/register-service-worker.js","utils/WeatherConditions.js","components/Weather.js","App.js","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","weatherConditions","Rain","color","title","subtitle","icon","image","Clear","Thunderstorm","Clouds","Snow","Drizzle","Haze","Smoke","Mist","Weather","weather","temperature","View","style","styles","weatherContainer","backgroundColor","ImageBackground","source","headerContainer","MaterialCommunityIcons","size","name","Text","tempText","bodyContainer","propTypes","PropTypes","number","isRequired","string","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","textShadowColor","textShadowOffset","width","height","textShadowRadius","fontSize","paddingLeft","marginBottom","resizeMode","DangerZone","Lottie","App","state","isLoading","weatherCondition","geolocation","getCurrentPosition","position","fetchWeather","coords","latitude","longitude","setState","lat","lon","fetch","res","json","log","main","temp","this","container","loadingContainer","loadingText","React","Component","registerRootComponent"],"mappings":"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","file":"static/js/app.2d2d3e1f.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/weather-app/expo-service-worker.js', { scope: '/weather-app/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","export const weatherConditions = {\r\n    Rain: {\r\n      color: '#005BEA',\r\n      title: 'Raining',\r\n      subtitle: 'Get a cup of coffee',\r\n      icon: 'weather-rainy',\r\n      image: 'https://images.unsplash.com/photo-1511634829096-045a111727eb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1491&q=80'\r\n    },\r\n\r\n    Clear: {\r\n      color: '#f7b733',\r\n      title: 'So Sunny',\r\n      subtitle: 'It is hurting my eyes',\r\n      icon: 'weather-sunny',\r\n      image: 'https://images.pexels.com/photos/754419/pexels-photo-754419.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\r\n    },\r\n\r\n    Thunderstorm: {\r\n      color: '#616161',\r\n      title: 'A Storm is coming',\r\n      subtitle: 'Because Gods are angry',\r\n      icon: 'weather-lightning',\r\n      image: 'https://images.pexels.com/photos/2418664/pexels-photo-2418664.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\r\n    },\r\n\r\n    Clouds: {\r\n      color: '#1F1C2C',\r\n      title: 'Clouds',\r\n      subtitle: 'Everywhere',\r\n      icon: 'weather-cloudy',\r\n      image: 'https://images.pexels.com/photos/414491/pexels-photo-414491.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'\r\n    },\r\n  \r\n    Snow: {\r\n      color: '#00d2ff',\r\n      title: 'Snow',\r\n      subtitle: 'Get out and build a snowman for me',\r\n      icon: 'weather-snowy',\r\n      image: 'https://images.pexels.com/photos/948857/pexels-photo-948857.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'\r\n    },\r\n\r\n    Drizzle: {\r\n      color: '#076585',\r\n      title: 'Drizzle',\r\n      subtitle: 'Partially raining...',\r\n      icon: 'weather-hail',\r\n      image: 'https://images.pexels.com/photos/110874/pexels-photo-110874.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'\r\n    },\r\n\r\n    Haze: {\r\n      color: '#66A6FF',\r\n      title: 'Haze',\r\n      subtitle: 'Another name for Partial Raining',\r\n      icon: 'weather-hail',\r\n      image: 'https://images.pexels.com/photos/39811/pexels-photo-39811.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\r\n    },\r\n\r\n    Smoke: {\r\n        color: '#738276',\r\n        title: 'Smoke',\r\n        subtitle: 'California is burning again...',\r\n        icon: 'weather-fog',\r\n        image: 'https://images.pexels.com/photos/417070/pexels-photo-417070.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'\r\n    },\r\n\r\n    Mist: {\r\n      color: '#3CD3AD',\r\n      title: 'Mist',\r\n      subtitle: \"Don't roam in forests!\",\r\n      icon: 'weather-fog',\r\n      image: 'https://images.pexels.com/photos/1367192/pexels-photo-1367192.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260'\r\n    }\r\n  };","import React from 'react';\r\nimport { ImageBackground, View, Text, StyleSheet } from 'react-native';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport PropTypes from 'prop-types';\r\nimport { weatherConditions } from '../utils/WeatherConditions';\r\n\r\nconst Weather = ({ weather, temperature }) => {\r\n  if (weather != null) {\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.weatherContainer,\r\n          { backgroundColor: weatherConditions[weather].color }\r\n        ]}\r\n      >\r\n        <ImageBackground source={weatherConditions[weather].image} style={styles.image}>\r\n        \r\n            <View style={styles.headerContainer}>\r\n            <MaterialCommunityIcons\r\n                size={72}\r\n                name={weatherConditions[weather].icon}\r\n                color={'#fff'}\r\n            />\r\n            <Text style={styles.tempText}>{temperature}Ëš</Text>\r\n            </View>\r\n            <View style={styles.bodyContainer}>\r\n            <Text style={styles.title}>{weatherConditions[weather].title}</Text>\r\n            <Text style={styles.subtitle}>\r\n                {weatherConditions[weather].subtitle}\r\n            </Text>\r\n            </View>\r\n\r\n        </ImageBackground>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View>\r\n        <Text>Oh no, something went wrong</Text>\r\n      </View>\r\n    )\r\n  };\r\n};\r\n\r\nWeather.propTypes = {\r\n  temperature: PropTypes.number.isRequired,\r\n  weather: PropTypes.string\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  weatherContainer: {\r\n    flex: 1\r\n  },\r\n  headerContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n    textShadowOffset: {width: -1, height: 1},\r\n    textShadowRadius: 10\r\n  },\r\n  tempText: {\r\n    fontSize: 72,\r\n    color: '#fff',\r\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n    textShadowOffset: {width: -1, height: 1},\r\n    textShadowRadius: 10\r\n  },\r\n  bodyContainer: {\r\n    flex: 2,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-end',\r\n    paddingLeft: 25,\r\n    marginBottom: 40\r\n  },\r\n  title: {\r\n    fontSize: 60,\r\n    color: '#fff',\r\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n    textShadowOffset: {width: -1, height: 1},\r\n    textShadowRadius: 10\r\n  },\r\n  subtitle: {\r\n    fontSize: 24,\r\n    color: '#fff',\r\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n    textShadowOffset: {width: -1, height: 1},\r\n    textShadowRadius: 10\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\"\r\n  }\r\n});\r\n\r\nexport default Weather;","import React from 'react';\nimport { StyleSheet, Text, View, Animated } from 'react-native';\n\nimport { DangerZone } from 'expo';\nconst { Lottie } = DangerZone;\n\nimport { API_KEY } from './utils/WeatherAPIKey';\n\nimport Weather from './components/Weather';\n\nexport default class App extends React.Component {\n  state = {\n    isLoading: true,\n    temperature: 0,\n    weatherCondition: null,\n    error: null\n  };\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        this.fetchWeather(position.coords.latitude, position.coords.longitude);\n      },\n      error => {\n        this.setState({\n          error: 'Error Getting Weather Condtions'\n        });\n      }\n    );\n  }\n\n  fetchWeather(lat, lon) {\n    fetch(\n      `https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&APPID=${API_KEY}&units=metric`\n    )\n      .then(res => res.json())\n      .then(json => {\n        console.log(json);\n        this.setState({\n          temperature: json.main.temp,\n          weatherCondition: json.weather[0].main,\n          isLoading: false\n        });\n      });\n  }\n\n  render() {\n    const { isLoading, weatherCondition, temperature } = this.state;\n    return (\n      <View style={styles.container}>\n        {isLoading ? (\n          <View style={styles.loadingContainer}>\n            <Text style={styles.loadingText}>Fetching The Weather</Text>\n          </View>\n        ) : (\n          <Weather weather={weatherCondition} temperature={temperature} />\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#FFFDE4'\n  },\n  loadingText: {\n    fontSize: 30\n  }\n});","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}